import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable Ubuntu.Components.Labs 1.0'

Module {
    dependencies: ["QtQuick 2.7"]
    Component {
        name: "Menu"
        defaultProperty: "data"
        prototype: "UCAction"
        exports: ["Ubuntu.Components.Labs/Menu 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "data"; type: "QObject"; isList: true; isReadonly: true }
        Method {
            name: "show"
            Parameter { name: "pt"; type: "QPoint" }
        }
        Method { name: "dismiss" }
        Method {
            name: "appendObject"
            Parameter { name: "obj"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "insertObject"
            Parameter { name: "index"; type: "int" }
            Parameter { name: "obj"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "removeObject"
            Parameter { name: "obj"; type: "QObject"; isPointer: true }
        }
    }
    Component {
        name: "MenuBar"
        defaultProperty: "menus"
        prototype: "QObject"
        exports: ["Ubuntu.Components.Labs/MenuBar 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "menus"; type: "Menu"; isList: true; isReadonly: true }
        Method {
            name: "appendMenu"
            Parameter { name: "menu"; type: "Menu"; isPointer: true }
        }
        Method {
            name: "insertMenu"
            Parameter { name: "index"; type: "int" }
            Parameter { name: "menu"; type: "Menu"; isPointer: true }
        }
        Method {
            name: "removeMenu"
            Parameter { name: "menu"; type: "Menu"; isPointer: true }
        }
    }
    Component {
        name: "MenuGroup"
        defaultProperty: "data"
        prototype: "QObject"
        exports: ["Ubuntu.Components.Labs/MenuGroup 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "data"; type: "QObject"; isList: true; isReadonly: true }
        Signal {
            name: "added"
            Parameter { name: "object"; type: "QObject"; isPointer: true }
        }
        Signal {
            name: "removed"
            Parameter { name: "object"; type: "QObject"; isPointer: true }
        }
        Signal { name: "changed" }
        Method {
            name: "addObject"
            Parameter { name: "object"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "removeObject"
            Parameter { name: "object"; type: "QObject"; isPointer: true }
        }
    }
    Component {
        name: "QQuickRootItem"
        defaultProperty: "data"
        prototype: "QQuickItem"
        Method {
            name: "setWidth"
            Parameter { name: "w"; type: "int" }
        }
        Method {
            name: "setHeight"
            Parameter { name: "h"; type: "int" }
        }
    }
    Component {
        name: "QQuickWindow"
        defaultProperty: "data"
        prototype: "QWindow"
        Enum {
            name: "SceneGraphError"
            values: {
                "ContextNotAvailable": 1
            }
        }
        Property { name: "data"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "color"; type: "QColor" }
        Property { name: "contentItem"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property {
            name: "activeFocusItem"
            revision: 1
            type: "QQuickItem"
            isReadonly: true
            isPointer: true
        }
        Signal { name: "frameSwapped" }
        Signal {
            name: "openglContextCreated"
            revision: 2
            Parameter { name: "context"; type: "QOpenGLContext"; isPointer: true }
        }
        Signal { name: "sceneGraphInitialized" }
        Signal { name: "sceneGraphInvalidated" }
        Signal { name: "beforeSynchronizing" }
        Signal { name: "afterSynchronizing"; revision: 2 }
        Signal { name: "beforeRendering" }
        Signal { name: "afterRendering" }
        Signal { name: "afterAnimating"; revision: 2 }
        Signal { name: "sceneGraphAboutToStop"; revision: 2 }
        Signal {
            name: "closing"
            revision: 1
            Parameter { name: "close"; type: "QQuickCloseEvent"; isPointer: true }
        }
        Signal {
            name: "colorChanged"
            Parameter { type: "QColor" }
        }
        Signal { name: "activeFocusItemChanged"; revision: 1 }
        Signal {
            name: "sceneGraphError"
            revision: 2
            Parameter { name: "error"; type: "QQuickWindow::SceneGraphError" }
            Parameter { name: "message"; type: "string" }
        }
        Method { name: "update" }
        Method { name: "releaseResources" }
    }
    Component {
        name: "QWindow"
        prototype: "QObject"
        Enum {
            name: "Visibility"
            values: {
                "Hidden": 0,
                "AutomaticVisibility": 1,
                "Windowed": 2,
                "Minimized": 3,
                "Maximized": 4,
                "FullScreen": 5
            }
        }
        Property { name: "title"; type: "string" }
        Property { name: "modality"; type: "Qt::WindowModality" }
        Property { name: "flags"; type: "Qt::WindowFlags" }
        Property { name: "x"; type: "int" }
        Property { name: "y"; type: "int" }
        Property { name: "width"; type: "int" }
        Property { name: "height"; type: "int" }
        Property { name: "minimumWidth"; type: "int" }
        Property { name: "minimumHeight"; type: "int" }
        Property { name: "maximumWidth"; type: "int" }
        Property { name: "maximumHeight"; type: "int" }
        Property { name: "visible"; type: "bool" }
        Property { name: "active"; revision: 1; type: "bool"; isReadonly: true }
        Property { name: "visibility"; revision: 1; type: "Visibility" }
        Property { name: "contentOrientation"; type: "Qt::ScreenOrientation" }
        Property { name: "opacity"; revision: 1; type: "double" }
        Signal {
            name: "screenChanged"
            Parameter { name: "screen"; type: "QScreen"; isPointer: true }
        }
        Signal {
            name: "modalityChanged"
            Parameter { name: "modality"; type: "Qt::WindowModality" }
        }
        Signal {
            name: "windowStateChanged"
            Parameter { name: "windowState"; type: "Qt::WindowState" }
        }
        Signal {
            name: "windowTitleChanged"
            revision: 2
            Parameter { name: "title"; type: "string" }
        }
        Signal {
            name: "xChanged"
            Parameter { name: "arg"; type: "int" }
        }
        Signal {
            name: "yChanged"
            Parameter { name: "arg"; type: "int" }
        }
        Signal {
            name: "widthChanged"
            Parameter { name: "arg"; type: "int" }
        }
        Signal {
            name: "heightChanged"
            Parameter { name: "arg"; type: "int" }
        }
        Signal {
            name: "minimumWidthChanged"
            Parameter { name: "arg"; type: "int" }
        }
        Signal {
            name: "minimumHeightChanged"
            Parameter { name: "arg"; type: "int" }
        }
        Signal {
            name: "maximumWidthChanged"
            Parameter { name: "arg"; type: "int" }
        }
        Signal {
            name: "maximumHeightChanged"
            Parameter { name: "arg"; type: "int" }
        }
        Signal {
            name: "visibleChanged"
            Parameter { name: "arg"; type: "bool" }
        }
        Signal {
            name: "visibilityChanged"
            revision: 1
            Parameter { name: "visibility"; type: "QWindow::Visibility" }
        }
        Signal { name: "activeChanged"; revision: 1 }
        Signal {
            name: "contentOrientationChanged"
            Parameter { name: "orientation"; type: "Qt::ScreenOrientation" }
        }
        Signal {
            name: "focusObjectChanged"
            Parameter { name: "object"; type: "QObject"; isPointer: true }
        }
        Signal {
            name: "opacityChanged"
            revision: 1
            Parameter { name: "opacity"; type: "double" }
        }
        Method { name: "requestActivate"; revision: 1 }
        Method {
            name: "setVisible"
            Parameter { name: "visible"; type: "bool" }
        }
        Method { name: "show" }
        Method { name: "hide" }
        Method { name: "showMinimized" }
        Method { name: "showMaximized" }
        Method { name: "showFullScreen" }
        Method { name: "showNormal" }
        Method { name: "close"; type: "bool" }
        Method { name: "raise" }
        Method { name: "lower" }
        Method {
            name: "setTitle"
            Parameter { type: "string" }
        }
        Method {
            name: "setX"
            Parameter { name: "arg"; type: "int" }
        }
        Method {
            name: "setY"
            Parameter { name: "arg"; type: "int" }
        }
        Method {
            name: "setWidth"
            Parameter { name: "arg"; type: "int" }
        }
        Method {
            name: "setHeight"
            Parameter { name: "arg"; type: "int" }
        }
        Method {
            name: "setMinimumWidth"
            Parameter { name: "w"; type: "int" }
        }
        Method {
            name: "setMinimumHeight"
            Parameter { name: "h"; type: "int" }
        }
        Method {
            name: "setMaximumWidth"
            Parameter { name: "w"; type: "int" }
        }
        Method {
            name: "setMaximumHeight"
            Parameter { name: "h"; type: "int" }
        }
        Method {
            name: "alert"
            revision: 1
            Parameter { name: "msec"; type: "int" }
        }
        Method { name: "requestUpdate"; revision: 3 }
    }
    Component {
        name: "SplitView"
        defaultProperty: "data"
        prototype: "QQuickBasePositioner"
        exports: ["Ubuntu.Components.Labs/SplitView 1.0"]
        exportMetaObjectRevisions: [0]
        attachedType: "SplitViewAttached"
        Property { name: "layouts"; type: "SplitViewLayout"; isList: true; isReadonly: true }
        Property { name: "activeLayout"; type: "SplitViewLayout"; isReadonly: true; isPointer: true }
        Property { name: "handleDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "spacing"; type: "double" }
        Signal { name: "spacingChanged2" }
    }
    Component {
        name: "SplitViewAttached"
        prototype: "QObject"
        Property { name: "column"; type: "int"; isReadonly: true }
        Property { name: "view"; type: "SplitView"; isReadonly: true; isPointer: true }
        Property { name: "columnConfig"; type: "ViewColumn"; isReadonly: true; isPointer: true }
    }
    Component {
        name: "SplitViewLayout"
        defaultProperty: "columns"
        prototype: "QObject"
        exports: ["Ubuntu.Components.Labs/SplitViewLayout 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "when"; type: "bool" }
        Property { name: "columns"; type: "ViewColumn"; isList: true; isReadonly: true }
    }
    Component {
        name: "UCAction"
        prototype: "QObject"
        Enum {
            name: "Type"
            values: {
                "None": 0,
                "String": 1,
                "Integer": 2,
                "Bool": 3,
                "Real": 4,
                "Object": 255
            }
        }
        Property { name: "name"; type: "string" }
        Property { name: "text"; type: "string" }
        Property { name: "iconName"; type: "string" }
        Property { name: "description"; type: "string" }
        Property { name: "keywords"; type: "string" }
        Property { name: "enabled"; type: "bool" }
        Property { name: "parameterType"; type: "Type" }
        Property { name: "checkable"; revision: 1; type: "bool" }
        Property { name: "checked"; revision: 1; type: "bool" }
        Property { name: "exclusiveGroup"; revision: 1; type: "ExclusiveGroup"; isPointer: true }
        Property { name: "iconSource"; type: "QUrl" }
        Property { name: "visible"; type: "bool" }
        Property { name: "itemHint"; type: "QQmlComponent"; isPointer: true }
        Property { name: "shortcut"; revision: 1; type: "QVariant" }
        Signal { name: "checkableChanged"; revision: 1 }
        Signal { name: "exclusiveGroupChanged"; revision: 1 }
        Signal {
            name: "triggered"
            Parameter { name: "value"; type: "QVariant" }
        }
        Signal {
            name: "toggled"
            revision: 1
            Parameter { name: "value"; type: "bool" }
        }
        Method {
            name: "trigger"
            Parameter { name: "value"; type: "QVariant" }
        }
        Method { name: "trigger" }
    }
    Component {
        name: "UCMainWindow"
        defaultProperty: "data"
        prototype: "QQuickWindow"
        exports: ["Ubuntu.Components.Labs/MainWindow 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "applicationName"; type: "string" }
        Property { name: "organizationName"; type: "string" }
        Property { name: "units"; type: "UCUnits"; isReadonly: true; isPointer: true }
        Property { name: "i18n"; type: "UbuntuI18n"; isReadonly: true; isPointer: true }
        Property { name: "actionContext"; type: "UCPopupContext"; isReadonly: true; isPointer: true }
        Property { name: "visualRoot"; type: "QQuickItem"; isPointer: true }
        Signal {
            name: "applicationNameChanged"
            Parameter { name: "applicationName"; type: "string" }
        }
        Signal {
            name: "organizationNameChanged"
            Parameter { name: "applicationName"; type: "string" }
        }
        Signal {
            name: "actionContextChanged"
            Parameter { name: "actionContext"; type: "UCPopupContext"; isPointer: true }
        }
        Signal {
            name: "visualRootChanged"
            Parameter { name: "visualRoot"; type: "QQuickItem"; isPointer: true }
        }
    }
    Component {
        name: "ViewColumn"
        prototype: "QObject"
        exports: ["Ubuntu.Components.Labs/ViewColumn 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "fillWidth"; type: "bool" }
        Property { name: "minimumWidth"; type: "double" }
        Property { name: "maximumWidth"; type: "double" }
        Property { name: "preferredWidth"; type: "double" }
    }
}
